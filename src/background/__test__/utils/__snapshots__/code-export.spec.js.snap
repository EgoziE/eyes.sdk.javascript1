// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`code-export java-junit commands checkElement 1`] = `"eyes.check(Target.window().region(By.id(\\"blah\\")).beforeRenderHook(preRenderHook).withName(\\"blah\\"));"`;

exports[`code-export java-junit commands checkElement 2`] = `"eyes.check(Target.window().region(By.id(\\"blah\\")).beforeRenderHook(preRenderHook));"`;

exports[`code-export java-junit commands checkWindow 1`] = `"eyes.check(Target.window().fully().beforeRenderHook(preRenderHook).withName(\\"blah\\"));"`;

exports[`code-export java-junit commands checkWindow 2`] = `"eyes.check(Target.window().fully().beforeRenderHook(preRenderHook));"`;

exports[`code-export java-junit commands setMatchLevel 1`] = `"eyes.setMatchLevel(\\"Layout\\");"`;

exports[`code-export java-junit commands setMatchTimeout 1`] = `"eyes.setMatchTimeout(10000);"`;

exports[`code-export java-junit commands setPreRenderHook 1`] = `"preRenderHook = \\"console.log(\\"blah\\");\\";"`;

exports[`code-export java-junit commands setPreRenderHook 2`] = `"preRenderHook = \\"\\";"`;

exports[`code-export java-junit commands setViewportSize 1`] = `"Eyes.setViewportSize(driver, new RectangleSize(1024, 768));"`;

exports[`code-export java-junit hooks afterEach 1`] = `
"runner.getAllTestResults();
eyes.abortIfNotClosed();"
`;

exports[`code-export java-junit hooks afterEach 2`] = `"eyes.abortIfNotClosed();"`;

exports[`code-export java-junit hooks beforeEach 1`] = `
"eyes = new Eyes();
eyes.setApiKey(System.getenv(\\"APPLITOOLS_API_KEY\\"));
eyes.open(driver, \\"project blah\\", \\"test blah\\");"
`;

exports[`code-export java-junit hooks beforeEach 2`] = `
"eyes = new Eyes();
eyes.setApiKey(System.getenv(\\"APPLITOOLS_API_KEY\\"));
eyes.setBaseLineEnvName(\\"blah\\");
eyes.open(driver, \\"project blah\\", \\"test blah\\");"
`;

exports[`code-export java-junit hooks beforeEach 3`] = `
"runner = new VisualGridRunner(concurrency);
eyes = new Eyes(runner);
Configuration config = eyes.getConfiguration();
config.addDeviceEmulation(DeviceName.IPAD, ScreenOrientation.PORTRAIT);
eyes.setConfiguration(config);
eyes.open(driver, \\"project blah\\", \\"test blah\\");"
`;

exports[`code-export java-junit hooks beforeEach 4`] = `
"runner = new VisualGridRunner(concurrency);
eyes = new Eyes(runner);
Configuration config = eyes.getConfiguration();
config.addBrowser(100, 100, BrowserType.chrome);
eyes.setConfiguration(config);
eyes.open(driver, \\"project blah\\", \\"test blah\\");"
`;

exports[`code-export java-junit hooks dependency 1`] = `
"
import com.applitools.eyes.selenium.Eyes;
import com.applitools.eyes.RectangleSize;
import com.applitools.eyes.selenium.BrowserType;
import com.applitools.eyes.selenium.Configuration;
import com.applitools.eyes.visualgrid.model.DeviceName;
import com.applitools.eyes.visualgrid.model.ScreenOrientation;
import com.applitools.eyes.visualgrid.services.VisualGridRunner;
import com.applitools.eyes.selenium.fluent.Target;"
`;

exports[`code-export java-junit hooks dependency 2`] = `
"
import com.applitools.eyes.selenium.Eyes;
import com.applitools.eyes.RectangleSize;"
`;

exports[`code-export java-junit hooks inEachEnd 1`] = `"eyes.close();"`;

exports[`code-export java-junit hooks variable 1`] = `
"private Eyes eyes;
private VisualGridRunner runner;
final int concurrency = 5;
private String preRenderHook;"
`;

exports[`code-export java-junit hooks variable 2`] = `"private Eyes eyes;"`;
