// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

const { Eyes, Target } = require('@applitools/eyes-selenium')
const { Configuration, VisualGridRunner, BrowserType, DeviceName, ScreenOrientation } = require('@applitools/eyes-selenium')
describe('Untitleddddddddddddddddddddddddddddd', function() {
  this.timeout(30000)
  let driver
  let vars
  let eyes
  let preRenderHook
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').usingServer('http://selenium:4444/wd/hub').build()
    vars = {}
    eyes = new Eyes(new VisualGridRunner())
    const config = new Configuration()
    config.setConcurrentSessions(10)
    config.addBrowser(2048, 1536, BrowserType.CHROME)
    config.addDeviceEmulation(DeviceName.iPhone_6_7_8_Plus, ScreenOrientation.LANDSCAPE)
    eyes.setConfiguration(config)
    eyes.setApiKey(process.env["APPLITOOLS_API_KEY"])
    eyes.setBaselineEnvName("asdfasdfjkjkjjasdfjasfjasdfj")
    await eyes.open(driver, "kkkk", "Untitleddddddddddddddddddddddddddddd")
  })
  afterEach(async function() {
    await driver.quit();
    const results = await eyes.getRunner().getAllTestResults()
    console.log(results)
    eyes.abortIfNotClosed()
  })
  it('Untitleddddddddddddddddddddddddddddd', async function() {
    await driver.get("https://www.google.com/")
    await eyes.setViewportSize({ width: 1440, height: 998 })
    preRenderHook = "console.log(\"blah\");"
    await eyes.check((new URL(await driver.getCurrentUrl())).pathname, Target.window().webHook(preRenderHook).accessibilityValidation("AA").fully(true))
    await eyes.check((new URL(await driver.getCurrentUrl())).pathname, Target.region(By.name("q")).webHook(preRenderHook).accessibilityValidation("AA"))
  })
})
